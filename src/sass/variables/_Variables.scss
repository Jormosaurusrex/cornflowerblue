
/*
  We want to use variables so that they can be re-themed
 */
:root {
  // Font Basics
  --fontstack-serif: "Times New Roman", Times, serif;
  --fontstack-sansserif: "Helvetica Neue", Arial, serif;
  --fontstack-monospace: "Lucida Console", Monaco, monospace;

  --default-font-family: var(--fontstack-sansserif);
  --default-font-size: 13pt;

  --text-color: var(--grey-dark);
  --colors-text-hot: var(--ultralight);
  --required-color: var(--red);
  --text-shadow: var(--text-shadow-light);

  --wide-measure: 40em;
  --thin-measure: 25em;

  // Canvas colors
  --canvas-color-primary: var(--ultralight);
  --canvas-color-secondary: var(--morelight);
  --canvas-color-tertiary: var(--light);
  --canvas-color-highlight: var(--cornflowerblue-light);
  --canvas-color-callout-lightweight: rgba(var(--cornflowerblue-light-rgb), .3);

  // Semantic colors

  // Actions (buttons and links)
  --colors-affordance-rgb: var(--darkblue-rgb); // Default for buttons and links
  --colors-affordance: rgb(var(--colors-affordance-rgb));

  --colors-highlight-rgb: var(--darkblue-rgb);
  --colors-highlight: rgb(var(--colors-highlight-rgb));

  --colors-constructive-rgb: var(--green-rgb); // This moves the action forward
  --colors-constructive: rgb(var(--colors-constructive-rgb));

  --colors-destructive-rgb: var(--red-rgb); // This moves the action backward/cancels
  --colors-destructive: rgb(var(--colors-destructive-rgb));

  // Fields (input elements)
  --colors-standard-rgb: var(--grey-dark-rgb); // Chrome: input borders, input chrome buttons, toggles, etc.
  --colors-standard: var(--grey-dark);

  --placeholder-color-rgb: var(--grey-medium-rgb); // Input placeholders
  --placeholder-color: var(--grey-medium);

  // Status
  --colors-focus-rgb: var(--green-rgb); // Indicates the item has been selected.
  --colors-focus: rgb(var(--colors-focus-rgb));

  --colors-required-rgb: var(--red-rgb); // Operation or element is required
  --colors-required: rgb(var(--colors-required-rgb));

  --colors-success-rgb: var(--green-rgb); // Operation or element is successful
  --colors-success: rgb(var(--colors-success-rgb));

  --colors-error-rgb: var(--red-rgb); // Operation or element is in an error state
  --colors-error: rgb(var(--colors-error-rgb));

  --colors-warning-rgb: var(--orange-rgb); // Operation or element is in an warning state
  --colors-warning: rgb(var(--colors-warning-rgb));

  --colors-caution-rgb: var(--yellow-rgb); // Operation or element is in an caution state
  --colors-caution: rgb(var(--colors-caution-rgb));

  --disabled-base-color: var(--light);
  --disabled-base-color-light: var(--morelight);
  --disabled-highlight-color: var(--grey-medium);
  --disabled-color-half: var(--grey-half);
  --disabled-color-quarter: var(--grey-quarter);
  --disabled-color-translucent: var(--grey-translucent);


  --shadows-dropshadow-filter: drop-shadow(0 .5em .5em rgba(0, 0, 0, 0.4));
  --shadows-interior-frombelow: 0 .3em .5em -.3em rgba(0, 0, 0, 0.2);
  --shadows-interior-fromabove: 0 -.3em .5em 0 rgba(0, 0, 0, 0.1);

  // Misc Values
  --border-radius: .2rem;

  // Shadows
  --text-shadow-heavy: 0 -.03em .03em rgba(0,0,0, 1), 0 .03em .03em rgba(255,255,255, 1);
  --text-shadow-light: 0 -.03em .03em rgba(0,0,0, .3), 0 .03em .03em rgba(255,255,255, .3);
  --text-shadow-singular: 0 -.03em .03em rgba(0,0,0, .3);
  --on-white-text-shadow: 0 .03em .03em rgba(50,50,50,0.3);
  --text-shadow-heavier: 0 .07em .07em rgba(0,0,0,0.7);

  --box-shadow: .1em .1em .5em 0 rgba(50, 50, 50, 0.5);
  --hover-box-shadow: 0 .1em .1em 0 rgba(50, 50, 50, 0.5);
  --panel-shadow: 0 .5em .5em 0 rgba(0, 0, 0, 0.4);
  --panel-shadow-inverse: 0 -.5em .5em 0 rgba(0, 0, 0, 0.4);
  --panel-shadow-light: 0 .5em .5em 0 rgba(0, 0, 0, 0.2);
  --panel-shadow-light-inverse: 0 -.5em .5em 0 rgba(0, 0, 0, 0.2);
  --interior-shadow: 0 .3em .5em -.3em rgba(0, 0, 0, 0.2);
  --interior-shadow-inverse: 0 -.3em .5em 0 rgba(0, 0, 0, 0.2);
  --interior-shadows-inside-dark: inset 0 .3em .5em 0 rgba(0, 0, 0, 0.2), inset 0 -.3em .5em 0 rgba(0, 0, 0, 0.2);
  --interior-shadows-inside: inset 0 .2em .2em 0 rgba(0, 0, 0, 0.1), inset 0 -.2em .2em 0 rgba(0, 0, 0, 0.2);

  --panel-shadow-filter: drop-shadow(0 .5em .5em rgba(0, 0, 0, 0.4));



}
