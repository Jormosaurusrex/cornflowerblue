button,
input[type='submit'],
input[type='reset'],
a.button {
  --colors-local: var(--colors-affordance);
  display: flex;
  align-items: center;
  flex-direction: row;
  flex-wrap: nowrap;
  box-sizing: border-box;
  position: relative;
  text-align: left;
  text-decoration: none;
  white-space: nowrap;
  transition: color .2s,
              background-color .2s,
              box-shadow .2s;
  margin: .8rem .4rem .8rem .4rem;
  padding: .6rem 1rem .6rem 1rem;
  font-family: var(--default-font-family);
  font-weight: normal;
  font-size: 1rem;
  line-height: normal;
  touch-action: manipulation;
  cursor: pointer;
  color: var(--colors-text-hot);
  background-color: var(--colors-local);
  text-shadow: var(--text-shadow);
  border: none;
  border-radius: var(--border-radius);
  box-shadow: 0 .1rem .2rem 0 rgba(var(--grey-darker-rgb), 0.5);
  >span.icon {
    margin: 0 .5rem 0 0;
    &:before {
      margin: 0; // Generates padding issues otherwise
    }
    &.secondicon {
      margin: 0 0 0 .5rem;
    }
  }
  @include for-hover-only {
    &:hover,
    &.hover {
      outline: none;
      background-image: linear-gradient(to top, rgba(0,0,0,0) 0%,rgba(0,0,0,0.1) 100%);
      text-decoration: underline;
      box-shadow: 0 .1rem .5rem 0 rgba(var(--grey-darker-rgb), 0.7);
      filter: brightness(120%);
    }
  }
  &:focus,
  &.focus {
    outline: var(--colors-local) dashed .1rem;
    outline-offset: .2rem;
    text-decoration: underline double;
    background-image: linear-gradient(to bottom, rgba(0,0,0,0) 0%,rgba(0,0,0,0.2) 100%);
  }
  &:active,
  &.active {
    box-shadow: 0 .1rem .1rem 0 rgba(var(--grey-darker-rgb), 0.5);
    text-decoration: none;
    background-image: linear-gradient(to top, rgba(0,0,0,0) 0%,rgba(0,0,0,0.1) 100%);;
    filter: brightness(90%);
    outline: none;
  }
  &:disabled,
  &[aria-disabled="true"] {
    opacity: .5;
    filter: grayscale(50%);
    cursor: not-allowed;
    text-shadow: none;
    box-shadow: none;
    pointer-events: none;
  }

  &.constructive {
    --colors-local: var(--colors-constructive);
  }
  &.destructive {
    --colors-local: var(--colors-destructive);
  }

  &.righticon {
    flex-direction: row-reverse;
    span.icon {
      margin: 0 0 0 .5rem;
    }
  }
  &.expander {
    transition: width .2s;
    span.text,
    span.secondicon {
      transition: all .2s;
      opacity: 1;
      width: 0;
      overflow: hidden;
    }
    &:focus,
    &:active,
    &[aria-expanded='true'] {
      span.text,
      span.secondicon {
        animation: cfb-expando-button .2s;
        opacity: 1;
        width: auto;
      }
    }
    @include for-hover-only {
      &:hover {
        span.text,
        span.secondicon {
          animation: cfb-expando-button .2s;
          opacity: 1;
          width: auto;
        }
      }
    }
  }
  &.hamburger {
    --colors-local: var(--colors-text-hot);
    span.magichamburger {
      display: inline-block;
      width: 1rem;
      > span {
        width: 1rem;
        height: .2rem;
        background-color: var(--colors-local);
        display: block;
        margin: 0;
        transition: all 0.5s;
        border-radius: .1rem;
        &:first-child {
          transform: translateX(0) rotate(0);
          transform-origin: top left;
        }
        &:nth-child(2) {
          width: 1rem;
          margin: .2rem auto .2rem auto;
        }
        &:last-child {
          transform: translateX(0) rotate(0);
          transform-origin: bottom left;
        }
      }
    }
    &.mute {
      --colors-local: var(--colors-affordance);
    }
    &[aria-expanded='true'] {
      span.magichamburger {
        span {
          &:first-child {
            width: 1.25rem;
            transform: translateX(.15rem) rotate(45deg);
            transform-origin: top left;
          }
          &:nth-child(2) {
            width: .1rem;
          }
          &:last-child {
            width: 1.25rem;
            transform: translateX(.15rem) rotate(-45deg);
            transform-origin: bottom left;
          }
        }
      }
    }
  }
  &.ghost {
    --button-border-color: var(--colors-local);
    box-shadow: inset 0 0 0 .1rem var(--button-border-color);
    color: var(--colors-local);
    background-color: transparent;
    &:focus,
    &.focus,
    &:active,
    &.active {
      color: var(--colors-text-hot);
      background-color: var(--colors-local);
      text-shadow: var(--text-shadow);
      box-shadow: 0 .1rem .5rem 0 rgba(var(--grey-darker-rgb), 0.7);
    }
    @include for-hover-only {
      &:hover,
      &.hover {
        color: var(--colors-text-hot);
        background-color: var(--colors-local);
        text-shadow: var(--text-shadow);
        box-shadow: 0 .1rem .5rem 0 rgba(var(--grey-darker-rgb), 0.7);
      }
    }
  }
  &.mute {
    color: var(--colors-local);
    background-color: transparent;
    border-color: transparent;
    box-shadow: none;
    &.constructive,
    &.destructive {
      text-shadow: none;
    }
    &:active,
    &.active,
    &:focus,
    &.focus {
      box-shadow: 0 .1rem .5rem 0 rgba(var(--grey-darker-rgb), 0.7);
    }
    @include for-hover-only {
      &:hover,
      &.hover {
        text-decoration: underline;
        filter: brightness(120%);
        box-shadow: 0 .1rem .5rem 0 rgba(var(--grey-darker-rgb), 0.7);
      }
    }

    &:focus,
    &.focus,
    &:active,
    &.active {
      color: var(--colors-text-hot);
      background-color: var(--colors-local);
      text-shadow: var(--text-shadow);
    }
    @include for-hover-only {
      &:hover,
      &.hover {
        color: var(--colors-text-hot);
        background-color: var(--colors-local);
        text-shadow: var(--text-shadow);
      }
    }
    &:active,
    &.active {
      text-decoration: none;
      box-shadow: none;
    }
    &:focus,
    &.focus {
      outline: var(--button-default-color) dashed .1rem;
      outline-offset: .2rem;
      text-decoration: underline double;
    }

  }
  &.square,
  &.circle {
    padding: .5rem;
    width: 2rem;
    height: 2rem;
    line-height: 1;
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
    span.icon {
      margin: 0;
      font-size: 1.2rem;
    }
    span.secondicon,
    span.text {
      display: none;
    }
    &:hover,
    &:focus,
    &:active {
      text-decoration: none;
    }
  }
  &.circle {
    border: .1rem solid var(--colors-local);
    box-shadow: none;
    border-radius: 50%;
    &.mute {
      border: none;
    }
    &:hover,
    &:focus,
    &:active {
      box-shadow: 0 .1rem .5rem 0 rgba(50, 50, 50, 0.5);
    }
    &:disabled,
    &[aria-disabled="true"] {
      box-shadow: none;
      border: none;
    }
  }
  &.pill {
    border-radius: 1.5rem;
    margin: 0;
    &.ghost {
      box-shadow: none;
      border: .1rem solid var(--colors-local);
    }
    &:hover,
    &:active,
    &:focus,
    &:disabled,
    &[aria-disabled="true"] {
      border: none;
    }
  }
  &.naked,
  &.link {
    margin: 0;
    padding: 0;
    background-color: transparent;
    box-shadow: none;
    background-image: none;
    height: auto;
    width: auto;
    transition: brightness .5s;
    &:focus,
    &.focus,
    &:active,
    &.active {
      background-color: transparent;
      background-image: none;
      color: var(--colors-local);
    }
    @include for-hover-only {
      &:hover,
      &.hover {
        background-color: transparent;
        background-image: none;
        color: var(--colors-local);
      }
    }
  }
  &.naked {
    color: var(--colors-local);
  }
  &.link {
    color: var(--colors-affordance);
    text-shadow: var(--text-shadow);
    text-decoration: underline;
    @include for-hover-only {
      &:hover,
      &.hover {
        color: var(--colors-affordance);
        filter: brightness(120%);
        text-decoration: underline double;
      }
    }
    &:active,
    &.active {
      color: var(--colors-affordance);
    }
    &:focus,
    &.focus {
      color: var(--colors-affordance);
      text-decoration: underline double;
    }
    &:disabled,
    &[aria-disabled="true"] {
      text-shadow: none;
    }
  }
  &.micro {
    font-size: .6rem;
  }
  &.small {
    font-size: .8rem;
  }
  &.large {
    font-size: 1.2rem;
    @include for-phone-only {
      font-size: 1rem;
    }
  }
  &.fill {
    font-size: 1.2rem;
    width: 100%;
    height: 100%;
    @include for-phone-only {
      font-size: 1rem;
    }
  }

  &.image {
    --image-width: 2rem;
    --image-height: 2rem;
    width: var(--image-width);
    min-width: var(--image-width);
    height: var(--image-height);
    min-height: var(--image-height);
    background-size: cover;
  }
  &[aria-hidden="true"],
  &.hidden {
    display: none;
  }
  &.closebutton,
  &.togglebutton {
    --button-default-color: var(--colors-text-hot);
    opacity: 0.5;
    box-shadow: none;
    background: none;
    flex-direction: row-reverse;
    align-content: center;
    transition: opacity .5s;
    span.text {
      font-size: 1rem;
      opacity: 0;
    }
    span.icon {
      font-size: 1rem;
    }
    &:focus,
    &:active {
      color: var(--colors-text-hot);
      background: none;
    }
    &:focus {
      span.text {
        opacity: 1;
        display: inline-block;
      }
    }
    @include for-hover-only {
      &:hover {
        opacity: 1;
        color: var(--colors-text-hot);
        background: none;
        span.text {
          opacity: 1;
          display: inline-block;
        }
      }
    }
  }
  &.headerbutton {
    justify-content: flex-start;
    width: 100%;
    box-shadow: none;
    background: none;
    >span.icon {
      flex-grow: 0;
      margin-right: .5rem;
    }
    >span.text {
      flex-grow: 2;
    }
    >span.secondicon {
      flex-grow: 0;
      opacity: 0.5;
      margin-right: 0;
      margin-left: auto;
      align-self: flex-end;
    }
    @include for-hover-only {
      &:hover {
        span.secondicon {
          opacity: 1;
        }
      }
    }
  }
  &.help {
    overflow: visible;
    display: inline-block;
    span.icon {
      margin: 0;
    }
    &[aria-expanded='true'],
    &.stayopen {
      div.tooltip {
        display: flex;
        animation: cfb-fadein-delay-half .2s;
      }
    }
    &.stayopen {
      div.tooltip {
        button.closebutton {
          display: inline-block;
        }
      }
    }
  }
  &.tagbutton {
    overflow: visible;
    font-size: .8rem;
    padding: .2rem 1rem .2rem 1rem;
    span.tagicon {
      margin-right: 1rem;
      margin-left: 0;
      border-radius: 50%;
      color: var(--colors-local);
      background-color: var(--colors-text-hot);
      padding: .2rem;
    }
    div.tooltip {
      left: -1rem;
      bottom: 2.5rem;
      &:before {
        left: 1rem;
        bottom: -.5rem;
      }
    }
    &.righticon {
      padding-right: .2rem;
      span.tagicon {
        margin-right: 0;
        margin-left: 1rem;
      }
    }
  }
  &.menu {
    overflow: visible;
    &.square,
    &.circle {
      ul,
      form,
      div {
        &.menu {
          font-size: 1rem;
          &:before {
            right: .25rem;
          }
        }
      }
    }
    &[aria-expanded='true'] {
      color: var(--colors-text-hot);
      text-shadow: var(--text-shadow);
      background-color: var(--colors-local);
      box-shadow: 0 .1rem .5rem 0 rgba(var(--grey-darker-rgb), 0.7);
      outline: none;
      text-decoration: none;
      ul.menu {
        display: flex;
      }
    }
  }
  >span.badge {
    position: absolute;
    left: .5rem;
    bottom: .5rem;
    background-color: var(--red);
    box-shadow: 0 0 0 .1rem var(--colors-highlight);
    color: var(--colors-highlight);
    border-radius: 50%;
    width: 1.5rem;
    height: 1.5rem;
    display: flex;
    flex-direction: column;
    align-content: center;
    justify-content: center;
    align-items: center;
  }
}
// various .button-menu elements is described in _ButtonMenuBodyLevel.scss
